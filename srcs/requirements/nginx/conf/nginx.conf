# Define the user and group that NGINX will run as
user www-data www-data;
# Set the number of NGINX worker processes
worker_processes 1;

# Enable multi-process mode for better performance
events {
    worker_connections 1024;
}

http {
    # Set the MIME types that NGINX will recognize
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Set the log format for access logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Define the access log file
    access_log /var/log/nginx/access.log main;

    # Define the error log file and log level
    error_log /var/log/nginx/error.log warn;

    # Configure NGINX to serve WordPress over HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name zasabri.42.fr;

        # SSL certificate and key locations
        ssl_certificate /etc/nginx/ssl_certificates/zasabri.42.crt;
        ssl_certificate_key /etc/nginx/ssl_certificates/zasabri.42.key;

        # Enable SSL and configure protocols
        ssl on;
        ssl_protocols TLSv1.2 TLSv1.3;

        # Disable SSL session tickets for better security
        ssl_session_tickets off;

        # Set up SSL session cache
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 5m;

        # Enable OCSP stapling for improved security
        ssl_stapling on;
        ssl_stapling_verify on;

        # Enable HSTS to enforce HTTPS
        add_header Strict-Transport-Security "max-age=31536000" always;

        # Configure NGINX to proxy requests to the backend (WordPress container)
        location / {
            proxy_pass http://wordpress-container:your_wordpress_port;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Specify error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
